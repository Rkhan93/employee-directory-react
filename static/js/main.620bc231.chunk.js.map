{"version":3,"sources":["components/Wrapper/index.js","components/Title/index.js","components/EmployeeCard/index.js","components/Emailsearch.js","App.js","reportWebVitals.js","index.js"],"names":["Wrapper","props","className","children","Title","EmployeeCard","alt","name","src","image","firstname","lastname","email","onClick","removeEmployee","id","EmailSearch","inputRef","useRef","ref","type","placeholder","employeeNarrow","current","value","App","state","employees","employeesData","filter","employee","setState","filterEmployee","searchText","employeeSet","Object","keys","key","some","includes","this","map","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gkEAOeA,MAJf,SAAiBC,GACf,OAAO,qBAAKC,UAAU,UAAf,SAA0BD,EAAME,Y,MCG1BC,MAJf,SAAeH,GACb,OAAO,oBAAIC,UAAU,QAAd,SAAuBD,EAAME,Y,MCyBvBE,MA1Bf,SAAsBJ,GACpB,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,qBAAKI,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,UAEnC,qBAAKP,UAAU,UAAf,SACE,+BACE,+BACE,iDADF,IACgCD,EAAMS,aAEtC,+BACE,gDADF,IAC+BT,EAAMU,YAErC,+BACE,oDADF,IACmCV,EAAMW,cAI7C,sBAAMC,QAAS,kBAAMZ,EAAMa,eAAeb,EAAMc,KAAKb,UAAU,SAA/D,8BCNSc,MAdf,SAAqBf,GACjB,IAAMgB,EAAWC,iBAAO,MACxB,OAEI,qBAAKhB,UAAU,aAAf,SACI,sBAAKA,UAAU,sBAAf,UACQ,uBAAOiB,IAAKF,EAAUG,KAAK,OAAOlB,UAAU,eAAemB,YAAY,oBACvE,wBAAQR,QAAS,kBAAMZ,EAAMqB,eAAeL,EAASM,QAAQC,QAA7D,0BCqDLC,E,4MAlDbC,MAAQ,CACNC,a,EAGFb,eAAiB,SAAAC,GAEf,IAAMa,EAAgBD,EAAUE,QAAO,SAAAC,GAAQ,OAAIA,EAASf,KAAOA,KAEnE,EAAKgB,SAAS,CAAEJ,UAAWC,K,EAG7BI,eAAiB,SAACC,GAEhB,IAAMC,EAAcP,EAAUE,QAAO,SAAAC,GAEnC,OAAQK,OAAOC,KAAKN,GACnBD,QAAO,SAAAQ,GAAG,MAAY,OAARA,KACdC,MAAK,SAAAD,GAAG,OAAKP,EAASO,GAAKE,SAASN,SAGvC,EAAKF,SAAS,CAAEJ,UAAWO,K,uDAKnB,IAAD,OACP,OACE,eAAC,EAAD,WAEE,cAAC,EAAD,wDAEA,cAAC,EAAD,CAAaZ,eAAgBkB,KAAKR,iBAEjCQ,KAAKd,MAAMC,UAAUc,KAAI,SAAAX,GAAQ,OAChC,cAAC,EAAD,CACEhB,eAAiB,EAAKA,eACtBC,GAAKe,EAASf,GAEdL,UAAYoB,EAASpB,UACrBC,SAAWmB,EAASnB,SACpBF,MAAQqB,EAASrB,MACjBG,MAAQkB,EAASlB,OAJXkB,EAASf,c,GAvCT2B,aCEDC,EAZO,SAAAC,GAChBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAhBQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.620bc231.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction EmployeeCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n      <div className=\"content\">\n        <ul>\n          <li>\n            <strong>First Name:</strong> {props.firstname}\n          </li>\n          <li>\n            <strong>Last Name:</strong> {props.lastname}\n          </li>\n          <li>\n            <strong>Email Address:</strong> {props.email}\n          </li>\n        </ul>\n      </div>\n      <span onClick={() => props.removeEmployee(props.id)} className=\"remove\">\n        ùòÖ\n      </span>\n    </div>\n  );\n}\n\nexport default EmployeeCard;","import React, { useRef } from \"react\";\n\nfunction EmailSearch(props) {\n    const inputRef = useRef(null);\n    return (\n        \n        <div className=\"text-white\">\n            <div className=\"input-group-prepend\">\n                    <input ref={inputRef} type=\"text\" className=\"form-control\" placeholder=\"Search Employee\" />\n                    <button onClick={() => props.employeeNarrow(inputRef.current.value)}>Search</button>            \n                </div>\n            </div>\n       \n    )\n}\n\nexport default EmailSearch;","import React, { Component } from \"react\";\nimport './App.css';\nimport employees from \"./employees.json\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport EmployeeCard from \"./components/EmployeeCard\";\nimport EmailSearch from \"./components/Emailsearch\";\n\n// import { findRenderedComponentWithType } from 'react-dom/test-utils';\n\nclass App extends Component {\n  // Setting this.state.employees to the employees json array\n  state = {\n    employees\n  };\n\n  removeEmployee = id => {\n    // Filter this.state.employees for employees with an id not equal to the id being removed\n    const employeesData = employees.filter(employee => employee.id !== id);\n    // Set this.state.employees equal to the new employees array\n    this.setState({ employees: employeesData });\n  };\n\n  filterEmployee = (searchText) => {\n    // Filter this.state.employees for employees with an id not equal to the id being removed\n    const employeeSet = employees.filter(employee => {\n      \n      return  Object.keys(employee)\n      .filter(key => key !== 'id')\n      .some(key =>  employee[key].includes(searchText) ) //fancy es6 type way\n    });\n    // Set this.state.employees equal to the new employees array\n    this.setState({ employees: employeeSet });\n  };\n\n\n  // Map over this.state.employees and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n\n        <Title>Use the Search Tools to Find an Employee!</Title>\n\n        <EmailSearch employeeNarrow={this.filterEmployee} />\n\n        {this.state.employees.map(employee => (\n          <EmployeeCard\n            removeEmployee={ this.removeEmployee }\n            id={ employee.id }\n            key={ employee.id }\n            firstname={ employee.firstname }\n            lastname={ employee.lastname }\n            image={ employee.image }\n            email={ employee.email }\n\n          />\n        )) }\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      });\n    }\n  };\n  \n  export default reportWebVitals;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals.js';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}